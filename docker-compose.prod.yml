services:
  frontend:
    image: chattermate/frontend:latest
    ports:
      - "80:80"
    env_file:
      - ./frontend/.env  
    depends_on:
      - backend
    networks:
      - chattermate-network
    restart: unless-stopped

  backend:
    image: chattermate/backend:latest
    ports:
      - "8000:8000"
    environment:
      - REDIS_ENABLED=true
      - REDIS_URL=redis://redis:6379/0
      - WORKERS=4
      - TIMEOUT=120
      - LOG_LEVEL=info
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - chattermate-network
    restart: unless-stopped
    volumes:
      - backend_data:/app/uploads

  knowledge_processor:
    image: chattermate/backend:latest
    command: python -m app.workers.knowledge_processor
    environment:
      - REDIS_ENABLED=true
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=info
      - PYTHONUNBUFFERED=1
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - chattermate-network
    restart: always
    volumes:
      - backend_data:/app/uploads

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=chattermate
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chattermate-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - chattermate-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

networks:
  chattermate-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  backend_data: 